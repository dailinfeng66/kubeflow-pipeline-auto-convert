name: Get model1
inputs:
- {name: xdata_input, type: Dataset}
- {name: ydata_input, type: Dataset}
outputs:
- {name: get_model1_output, type: Dataset}
implementation:
  container:
    image: python:3.7
    command:
    - sh
    - -c
    - |2

      if ! [ -x "$(command -v pip)" ]; then
          python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
      fi

      PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'joblib' 'requests' 'numpy' 'pandas' 'kfp==1.8.11' && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - |2+

      import kfp
      from kfp.v2 import dsl
      from kfp.v2.dsl import *
      from typing import *

      def get_model1(xdata_input:Input[Dataset], ydata_input:Input[Dataset], get_model1_output:Output[Dataset]):
          import requests
          import numpy as np
          import pandas as pd
          import joblib

          def load_data(url, filename: str, url1: int=10):
              f = requests.get(url)
              with open(filename, 'wb') as code:
                  code.write(f.content)
              a = pd.read_excel(filename)
              xdata = a[['t', 'X_t_1', 'X_t_2', 't_T_1_X_t_1', 't_T_2_X_t_2', 'H_t', 'ck1', 'sk1', 'ck2', 'sk2']]
              ydata = np.log(a['Y'])
              return (xdata, ydata)
          xdata = joblib.load(xdata_input.path)['xdata']
          ydata = joblib.load(ydata_input.path)['ydata']
          params = Parameters()
          params.add('beta0', value=1.0)
          params.add('beta1', value=1.0)
          params.add('beta6', value=1.0)
          params.add('ck1', value=1.0)
          params.add('sk1', value=1.0)
          params.add('ck2', value=1.0)
          params.add('sk2', value=1.0)
          load_data()
          model = minimize(load_data(), params, args=(xdata.values, ydata.values))
          return joblib.dump({'model': model}, get_model1_output.path)

    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - get_model1
